<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- jQuery같은 자바스크립트나, css, img,등의 파일들은 resource로 처리해야한다. -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="/WEB-INF/views/include/" mapping="/include/**"></resources>
	<resources location="/WEB-INF/views/images/" mapping="/images/**"></resources>
	<resources location="/WEB-INF/views/json/" mapping="/json/**"></resources>
	
	
	
	<!-- CKEditor를 사용하기 전 밑작업 -->
	<!-- https://ckeditor.com/ckeditor-4/download/에서 Standard Package를 다운로드후 압축풀어서 -->
	<!-- /spring02/src/main/webapp/WEB-INF/views/에 풀더를 붙여넣음 -->
	<!-- 그 다음 아래처럼 servlet-context.xml에 resource 등록 -->
	<resources location="/WEB-INF/views/ckeditor/" mapping="/ckeditor/**"></resources>
	<resources location="/WEB-INF/views/summernote/" mapping="/summernote/**"></resources>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색(auto scan) -->
	<context:component-scan
		base-package="com.example.spring02" />

	<!-- 파일업로드에 필요한 bean -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 최대 용량(byte) -->
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath=new String("c:/upload"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="c:/upload" />
	</beans:bean>

	<!-- aop의 설정으로 Proxy 객체를 자동으로 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

 <!-- 인터셉터 빈을 등록 -->
 <beans:bean id="sampleInterceptor" 
 class="com.example.spring02.interceptor.SampleInterceptor">
 </beans:bean> 
 <beans:bean id="loginInterceptor" 
 class="com.example.spring02.interceptor.LoginInterceptor">
 </beans:bean>
 <beans:bean id="adminInterceptor" 
 class="com.example.spring02.interceptor.AdminInterceptor">
 </beans:bean>
 
 
 
 <!-- 인터셉터 호출을 위한 url mapping -->
 <interceptors>
  <interceptor>
   <mapping path="/shop/**"/>
   <beans:ref bean="sampleInterceptor" />
  </interceptor>
  <interceptor>
  
   <!-- 인터셉터 등록 -->
   <!-- servlet-context.xml에 가서 미리 interceptor 등록을 해놓자 -->
   <mapping path="/board/write.do"/>
   <mapping path="/board/insert.do"/>
   <mapping path="/board/update.do"/>
   <mapping path="/board/delete.do"/>
   
   <mapping path="/shop/cart/list.do"/>
   <mapping path="/shop/cart/insert.do"/>
   <beans:ref bean="loginInterceptor"/>
  </interceptor>
  <interceptor>
   <mapping path="/admin/write.do"/>
   <mapping path="/admin/list.do" />
   <mapping path="/shop/product/insert.do" />
   <mapping path="/chart/**"/>
   <mapping path="/jchart/**"/>
   <mapping path="/pdf/list.do"/>
   <mapping path="/email/write.do"/>
   <beans:ref bean="adminInterceptor"/>
  </interceptor>
 </interceptors>

</beans:beans>













